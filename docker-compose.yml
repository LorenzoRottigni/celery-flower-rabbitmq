version: '3'
services:
  rabbitmq:
    image: rabbitmq:3.9.29-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      # RabbitMQ HTTP port
      - "5672:5672"
      # RabbitMQ management port
      - "15672:15672"
      # RabbitMQ backend port
      - "5673:5673"
    networks:
      - celery_network
    healthcheck:
      # based on process exit status 0 or 1
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  celery_worker:
    container_name: celery_worker
    hostname: celery_worker
    build:
      context: .
      dockerfile: Dockerfile.celery
    healthcheck:
      # based on process exit status 0 or 1
      test: ["CMD-SHELL", "celery status"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/app
    environment:
      # amqp://<username>:<password>@<hostname>:<port>/
      - CELERY_BROKER=amqp://guest:guest@rabbitmq:5672/
      # - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
    networks:
      - celery_network

  flower:
    image: mher/flower:latest
    container_name: flower
    hostname: flower
    working_dir: /app
    ports:
      - "5555:5555"
    depends_on:
      celery_worker:
        condition: service_healthy
    networks:
      - celery_network
    command: celery --app=celery_worker.app --broker=amqp://guest:guest@rabbitmq:5672/ flower --persisten=True --broker_api=http://guest:guest@rabbitmq:15672/api/ --logging=DEBUG --address=0.0.0.0
    volumes:
      - flower_data:/data
      - .:/app
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - CELERY_RESULT_BACKEND=rpc://guest:guest@rabbitmq:5673/
      - FLOWER_UNAUTHENTICATED_API=true

networks:
  celery_network:
    driver: bridge

volumes:
 flower_data:


 # TEST AUTH => curl -u guest:guest http://localhost:15672/api/whoami